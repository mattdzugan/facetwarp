[{"path":"https://mattdzugan.github.io/facetwarp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 facetwarp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"wrap","dir":"Articles","previous_headings":"Part 1: wrap vs warp 🪄","what":"wrap","title":"facetwarp","text":"First let’s recall facet_wrap gives us using iris dataset. 👇  Note 3 facets, one species, arranged alphabetical order. ’ve arranged 2 rows, 3 facets, 4th panel (lower, right) occupied.","code":"library(ggplot2)  ggplot(iris) +   geom_point(aes(x=Petal.Width, y=Petal.Length))+   facet_wrap(vars(Species),nrow = 2)"},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"warp","dir":"Articles","previous_headings":"Part 1: wrap vs warp 🪄","what":"warp","title":"facetwarp","text":"Now, know ’ve got columns dataset, specifically Sepal.Width Sepal.Length. Let’s explore axis quickly summarizing values Species  facetted scatter plot , instead arranging facets alphabetically, maybe want layout mimic Sepal.Length Sepal.Width arrangement see . TIME ✨ WARP FACETS 🪄  👆 Notice layout changed. facet_warp repositioned facets! fact, mimicing arrangement saw : * virginica top due high median_Sepal.Length * versicolor left due low median_Sepal.Width * setosa lower-right due low median_Sepal.Length high median_Sepal.Width accomplished using macro axes. say macro_x='Sepal.Width', ’re saying, make change “x axis” individual facets, order arrange facets , treat Sepal.Width x-dimension. Since need 4 panels total, can try dropping nrow ncol 2 condense arrangement:","code":"library(dplyr, warn.conflicts = FALSE)  ggplot(iris %>%              group_by(Species) %>%              summarize(median_Sepal.Width  = median(Sepal.Width),                       median_Sepal.Length = median(Sepal.Length)))+     geom_text(aes(x=median_Sepal.Width, y=median_Sepal.Length, label=Species)) library(facetwarp) ggplot(iris)+     geom_point(aes(x=Petal.Width, y=Petal.Length))+     facet_warp(vars(Species), macro_x='Sepal.Width', macro_y='Sepal.Length', nrow = 3, ncol = 3) ggplot(iris)+     geom_point(aes(x=Petal.Width, y=Petal.Length))+     facet_warp(vars(Species), macro_x='Sepal.Width', macro_y='Sepal.Length', nrow = 2, ncol = 2)"},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"part-2-building-on-the-warp-idea-with-election-data","dir":"Articles","previous_headings":"","what":"Part 2: Building on the Warp Idea with Election Data","title":"facetwarp","text":"Let’s get familiar bit US Presidential Election Data. US, two primary parties DEMOCRAT REPUBLICAN parties, can analyze margin parties one another county. rather just viewing counties alphabetically, let’s arrange counties variables matter.","code":"elections <- read.csv(file='https://gist.githubusercontent.com/mattdzugan/bf5bc48fad1850af59ac83a411f8c0d6/raw/8da67b51df907508f7c859fe29fc4637397513d8/County_Election_Data.csv') elections <- elections %>% mutate(log_pop_density = log10(pop_density)) head(elections) #>   county_fips   state state_po year county_name      candidate      party #> 1        1001 ALABAMA       AL 2000     AUTAUGA        AL GORE   DEMOCRAT #> 2        1001 ALABAMA       AL 2000     AUTAUGA GEORGE W. BUSH REPUBLICAN #> 3        1001 ALABAMA       AL 2004     AUTAUGA     JOHN KERRY   DEMOCRAT #> 4        1001 ALABAMA       AL 2004     AUTAUGA GEORGE W. BUSH REPUBLICAN #> 5        1001 ALABAMA       AL 2008     AUTAUGA   BARACK OBAMA   DEMOCRAT #> 6        1001 ALABAMA       AL 2008     AUTAUGA    JOHN MCCAIN REPUBLICAN #>   candidate_votes total_votes pop_density med_age      lon      lat #> 1            4942       17208    35.85342    39.2 -86.6429 32.53514 #> 2           11993       17208    35.85342    39.2 -86.6429 32.53514 #> 3            4758       20081    35.85342    39.2 -86.6429 32.53514 #> 4           15196       20081    35.85342    39.2 -86.6429 32.53514 #> 5            6093       23641    35.85342    39.2 -86.6429 32.53514 #> 6           17403       23641    35.85342    39.2 -86.6429 32.53514 #>   unemployment_rate med_hh_income percent_bachelors log_pop_density #> 1               2.9         66444          28.13147        1.554531 #> 2               2.9         66444          28.13147        1.554531 #> 3               2.9         66444          28.13147        1.554531 #> 4               2.9         66444          28.13147        1.554531 #> 5               2.9         66444          28.13147        1.554531 #> 6               2.9         66444          28.13147        1.554531"},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"the-more-facets-the-bigger-the-insights","dir":"Articles","previous_headings":"Part 2: Building on the Warp Idea with Election Data","what":"The More Facets, The Bigger the Insights","title":"facetwarp","text":"can try warp facets characteristics may impact voter tendancies. Specifically time: let’s see context","code":"facet_warp(vars(county_name),              macro_x = 'log_pop_density',              macro_y = 'med_age') ggplot(elections %>% filter(state_po == 'CA'))+   labs(title='California Election Results by County',         subtitle = 'Older Counties appear Higher, Denser Counties appear further Right',        y='proportion of votes')+   theme_minimal()+   theme(legend.position = 'None',         panel.spacing = unit(1.2, \"lines\"),         axis.text = element_text(size = 6))+   geom_rect(aes(xmin=year-4, xmax=year, ymin=(1-candidate_votes/total_votes), ymax=candidate_votes/total_votes, fill=party, alpha=candidate_votes/total_votes>.5))+   geom_step(aes(x=year, y=candidate_votes/total_votes, color=party), direction='vh', linewidth=0.8)+   scale_alpha_manual(values=c(0,0.3))+   scale_color_manual(values=c('#5768ac','#e24a41'))+   scale_fill_manual(values=c('#5768ac','#e24a41'))+   scale_x_continuous(limits=c(2000,2020), breaks = seq(2000,2020,4))+   facet_warp(vars(county_name),              macro_x = 'log_pop_density',              macro_y = 'med_age') #> Warning: Removed 116 rows containing missing values (`geom_rect()`)."},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"leaving-empty-space-to-reveal-geometries","dir":"Articles","previous_headings":"Part 2: Building on the Warp Idea with Election Data","what":"Leaving Empty Space to Reveal Geometries","title":"facetwarp","text":"can also take advantage mechanism sort facets geographically. fact, play nrow ncol bit, can even get something starts resemble State California  Note “blue” counties along Western Pacific Coast California! happens underlying algorithm attempting fit 58 counties 12*6=72 possible grid spaces. leaves 14 unused spaces means ’ll begin see underlying shape macro_x macro_y data.","code":"ggplot(elections %>% filter(state_po == 'CA'))+   labs(title='California Election Results by County',         y='proportion of votes')+   theme_minimal()+   theme(legend.position = 'None',         panel.spacing = unit(1.2, \"lines\"),         axis.text = element_text(size = 6))+   geom_rect(aes(xmin=year-4, xmax=year, ymin=(1-candidate_votes/total_votes), ymax=candidate_votes/total_votes, fill=party, alpha=candidate_votes/total_votes>.5))+   geom_step(aes(x=year, y=candidate_votes/total_votes, color=party), direction='vh', linewidth=0.8)+   scale_alpha_manual(values=c(0,0.3))+   scale_color_manual(values=c('#5768ac','#e24a41'))+   scale_fill_manual(values=c('#5768ac','#e24a41'))+   scale_x_continuous(limits=c(2000,2020), breaks = seq(2000,2020,4))+   facet_warp(vars(county_name),              macro_x = 'lon',              macro_y = 'lat',               nrow = 12, ncol = 6) #> Warning: Removed 116 rows containing missing values (`geom_rect()`)."},{"path":"https://mattdzugan.github.io/facetwarp/articles/facetwarp.html","id":"part-3-chicago-transity-authority-data","dir":"Articles","previous_headings":"","what":"Part 3: Chicago Transity Authority Data","title":"facetwarp","text":"Another fun example sorting train station data geographically.  can clearly see spatial patterns ridership gains way simple alphabetical sorting wouldn’t allow.","code":"ridership <- read.csv('https://gist.githubusercontent.com/mattdzugan/603d4ba67f29457e2f5ddcad27178e8c/raw/efc26e77b39685eece11b051fbabbc74adad2ba0/CTA_Ridership.csv') ggplot(ridership[complete.cases(ridership), ])+   theme_minimal()+   theme(legend.position = 'None',         panel.spacing = unit(1.2, \"lines\"))+   labs(title=\"Ridership compared to January 2000\", ylab='% Change', xlab='')+   geom_hline(aes(yintercept=0))+   geom_area(aes(x=month, y=ifelse(avg_weekday_rides>avg_weekday_rides_initial, avg_weekday_rides/avg_weekday_rides_initial-1,0)), fill=\"#27b376\")+   geom_area(aes(x=month, y=ifelse(avg_weekday_rides<avg_weekday_rides_initial, avg_weekday_rides/avg_weekday_rides_initial-1,0)), fill=\"#f9a73e\")+   scale_y_continuous(limits=c(-1, 2))+   facet_warp(vars(stationame), macro_x = 'lon', macro_y = 'lat', nrow=16, ncol=13)"},{"path":"https://mattdzugan.github.io/facetwarp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Dzugan. Author, maintainer.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dzugan M (2023). facetwarp: Arrange ggplot2 Facets Using Numerical Columns. R package version 0.0.1, https://mattdzugan.github.io/facetwarp/.","code":"@Manual{,   title = {facetwarp: Arrange ggplot2 Facets Using Other Numerical Columns},   author = {Matthew Dzugan},   year = {2023},   note = {R package version 0.0.1},   url = {https://mattdzugan.github.io/facetwarp/}, }"},{"path":[]},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"facetwarp extension ggplot2, specifically aimed assisting arranging faceted plots. Typically facet_wrap positions facets alphabetically, facet_warp might: layout facets categories appear map 🗺 arrange facets points 2D scatter plot ⠞","code":""},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"Works Installation Usage Examples Comparison geofacet Contribute See Also","code":""},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"how-it-works-","dir":"","previous_headings":"","what":"How it Works","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"facetwarp uses solution Linear Assignment Problem developed Jonker & Volgenant take facets can expressed 2D space, snap regular grid.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"","code":"devtools::install_github(\"mattdzugan/facetwarp\")"},{"path":[]},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"hello-facet_warp-","dir":"","previous_headings":"Usage Examples","what":"Hello facet_warp 🪄","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"Try ! (note warp wrap facet) ✨  facet_warp re-positioned facets! fact, arranged mimic arrangement saw : virginica top due high median_Sepal.Length versicolor left due low median_Sepal.Width setosa lower-right due low median_Sepal.Length high median_Sepal.Width","code":"library(ggplot2) library(facetwarp) ggplot(iris)+     geom_point(aes(x=Petal.Width, y=Petal.Length))+     facet_warp(vars(Species), macro_x='Sepal.Width', macro_y='Sepal.Length', nrow = 3, ncol = 3)"},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"a-more-interesting-example","dir":"","previous_headings":"Usage Examples","what":"A more interesting example:","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"Note familiar shape state Florida, since used lat lon macro variables.","code":"library(dplyr) library(ggplot2) library(facetwarp)   elections <- read.csv(file='https://gist.githubusercontent.com/mattdzugan/bf5bc48fad1850af59ac83a411f8c0d6/raw/8da67b51df907508f7c859fe29fc4637397513d8/County_Election_Data.csv')  ggplot(elections %>% filter(state_po == 'FL'))+   labs(title='Florida Election Results by County',         y='proportion of votes')+   theme_minimal()+   theme(legend.position = 'None',         panel.spacing = unit(1.2, \"lines\"),          axis.title = element_text(size = 18),          plot.title = element_text(size = 36),          axis.text = element_text(size = 8))+   geom_rect(aes(xmin=year-4, xmax=year, ymin=(1-candidate_votes/total_votes), ymax=candidate_votes/total_votes, fill=party, alpha=candidate_votes/total_votes>.5))+   geom_step(aes(x=year, y=candidate_votes/total_votes, color=party), direction='vh', linewidth=0.8)+   scale_alpha_manual(values=c(0,0.3))+   scale_color_manual(values=c('#5768ac','#e24a41'))+   scale_fill_manual(values=c('#5768ac','#e24a41'))+   scale_x_continuous(limits=c(2000,2020), breaks = seq(2000,2020,4))+   facet_warp(vars(county_name),              macro_x = 'lon',              macro_y = 'lat',              ncol = 12, nrow = 15)"},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"isnt-this-the-same-as-geofacet-","dir":"","previous_headings":"","what":"Isn’t this the same as geofacet?","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"idea facetwarp similar geofacet, providing additional benefits: grid-arrangement computed automatically given numerical data (lat lon) - unlocks potential create beautiful arrangements SET DATA Since arrangements computed automatically, limited geospatial arrangements, can use numerical dimensions.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"how-to-contribute-","dir":"","previous_headings":"","what":"How to Contribute","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"repo just brand new baby, please open issue, reach twitter… mean.. x.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/index.html","id":"see-also-","dir":"","previous_headings":"","what":"See Also","title":"Arrange ggplot2 Facets Using Other Numerical Columns","text":"geofacet - R Package beautiful hand-curated layouts Linear Assignment Problem Jonker & Volgenant","code":""},{"path":"https://mattdzugan.github.io/facetwarp/reference/compute_arrangement.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Arrangement Using Jonker & Volgenant algorithm — compute_arrangement","title":"Compute Arrangement Using Jonker & Volgenant algorithm — compute_arrangement","text":"Compute Arrangement Using Jonker & Volgenant algorithm","code":""},{"path":"https://mattdzugan.github.io/facetwarp/reference/compute_arrangement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Arrangement Using Jonker & Volgenant algorithm — compute_arrangement","text":"","code":"compute_arrangement(mydata, macro_x, macro_y, faceter, n_row, n_col)"},{"path":"https://mattdzugan.github.io/facetwarp/reference/compute_arrangement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Arrangement Using Jonker & Volgenant algorithm — compute_arrangement","text":"mydata data frame contains macro_x, macro_y, faceter columns macro_x name column shall used arrange facets horizontally macro_y name column shall used arrange facets vertically faceter column name defining faceting groups nrow, ncol Number rows columns.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/reference/facet_warp.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Facets for your ggplot object — facet_warp","title":"Arrange Facets for your ggplot object — facet_warp","text":"Arrange Facets ggplot object","code":""},{"path":"https://mattdzugan.github.io/facetwarp/reference/facet_warp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Facets for your ggplot object — facet_warp","text":"","code":"facet_warp(   facets,   macro_x,   macro_y,   nrow = NULL,   ncol = NULL,   strip.position = \"top\",   labeller = \"label_value\" )"},{"path":"https://mattdzugan.github.io/facetwarp/reference/facet_warp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Facets for your ggplot object — facet_warp","text":"facets variable, quoted vars(), defining faceting groups macro_x name column shall used arrange facets horizontally macro_y name column shall used arrange facets vertically nrow, ncol Number rows columns. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\") labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options.","code":""},{"path":"https://mattdzugan.github.io/facetwarp/reference/facet_warp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange Facets for your ggplot object — facet_warp","text":"","code":"ggplot(iris)+    geom_point(aes(x=Petal.Width, y=Petal.Length))+    facet_warp(vars(Species), macro_x='Sepal.Width', macro_y='Sepal.Length', nrow = 2) #> Error in ggplot(iris): could not find function \"ggplot\""}]
